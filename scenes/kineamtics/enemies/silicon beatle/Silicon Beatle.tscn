[gd_scene load_steps=14 format=2]

[ext_resource path="res://assets/spritesheets/silicon beetle spritesheet.png" type="Texture" id=1]
[ext_resource path="res://assets/sprites/enemy_hp_green_fill.png" type="Texture" id=2]
[ext_resource path="res://assets/sprites/enemy_hp_outline.png" type="Texture" id=3]
[ext_resource path="res://scenes/kineamtics/enemies/silicon beatle/Silicon Beatle.gd" type="Script" id=4]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform bool active = false;

void fragment() {
	vec4 previous_color = texture(TEXTURE, UV);
	vec4 white_color = vec4(1.0, 1.0, 1.0, previous_color.a);
	vec4 new_color = previous_color;
	if (active == true)
	{
		new_color = white_color
	}
	COLOR = new_color;
}"

[sub_resource type="ShaderMaterial" id=2]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/active = false

[sub_resource type="Animation" id=3]
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("../Silicon Beatle/Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 8, 9, 10, 11, 12 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../Silicon Beatle/Sprite:material:shader_param/active")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}

[sub_resource type="Animation" id=4]
tracks/0/type = "value"
tracks/0/path = NodePath("../Silicon Beatle/Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 13, 14, 15, 16, 17, 18, 19, 20, 21 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../Silicon Beatle/Sprite:material:shader_param/active")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}

[sub_resource type="Animation" id=5]
resource_name = "hurt"
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath("../Silicon Beatle/Sprite:material:shader_param/active")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ false, true, false, true, false ]
}

[sub_resource type="Animation" id=6]
length = 0.4
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("../Silicon Beatle/Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../Silicon Beatle/Sprite:material:shader_param/active")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}

[sub_resource type="Animation" id=7]
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath("../Silicon Beatle/Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 4, 5, 6, 7 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../Silicon Beatle/Sprite:material:shader_param/active")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}

[sub_resource type="CapsuleShape2D" id=8]
height = 17.8923

[sub_resource type="CapsuleShape2D" id=9]
radius = 27.1073
height = 346.133

[node name="Silicon Beatle" type="KinematicBody2D"]
position = Vector2( 1, 0 )
z_index = 1
script = ExtResource( 4 )

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 2 )
texture = ExtResource( 1 )
hframes = 22
frame = 5

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/attack = SubResource( 3 )
anims/dead = SubResource( 4 )
anims/hurt = SubResource( 5 )
anims/idle = SubResource( 6 )
anims/run = SubResource( 7 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( 0, 2 )
shape = SubResource( 8 )

[node name="crosshair" type="Position2D" parent="."]
position = Vector2( -16.416, 4.28062 )

[node name="detectFloor" type="RayCast2D" parent="."]
position = Vector2( -14.14, 0 )
scale = Vector2( 0.5, 0.5 )
enabled = true

[node name="detection_area" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="detection_area"]
position = Vector2( -0.775467, -6.67176 )
rotation = 1.5708
shape = SubResource( 9 )

[node name="hpbar" type="TextureProgress" parent="."]
margin_left = -22.0
margin_top = -24.0
margin_right = 18.0
margin_bottom = -18.0
value = 100.0
texture_over = ExtResource( 3 )
texture_progress = ExtResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Tween" type="Tween" parent="."]

[node name="playerDetectRayRight" type="RayCast2D" parent="."]
rotation = -1.5708
scale = Vector2( 1, 2.8 )
enabled = true

[node name="playerDetectRayLeft" type="RayCast2D" parent="."]
rotation = 1.5708
scale = Vector2( 1, 2.8 )
enabled = true

[node name="Position2D" type="Position2D" parent="."]
position = Vector2( 0, -40 )

[connection signal="hurt" from="." to="." method="_on_Silicon_Beatle_hurt"]
[connection signal="killed" from="." to="." method="_on_Silicon_Beatle_killed"]
[connection signal="update_health" from="." to="." method="_on_Silicon_Beatle_update_health"]
[connection signal="body_entered" from="detection_area" to="." method="_on_detection_area_body_entered"]
[connection signal="body_exited" from="detection_area" to="." method="_on_detection_area_body_exited"]
